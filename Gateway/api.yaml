swagger: "2.0"
info:
  title: Lampnet Backend Exercise
  description: This is the collection of API's for the lampnet backend exercise
  version: 1.0
  termsOfService: http://swagger.io/terms/
  contact:
    email: odunolasamson@yahoo.com
  licence:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  servers:
    - url: "http://localhost:4000/"
      description: This is my local server
    - url: "xxxxxxxxxxx"
      description: This is the deployed server
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
tags:
  - name: Products
    description: Everything about products
  - name: Inventory
    description: Everything about inventory items
  - name: Supplier
    description: Everything about suppliers
schemes: [http, https]
paths:
  /product/all_products:
    get:
      tags:
        - Products
      summary: List all the products available
      description: This is a get request. it returns an array of objects which are the details of different products
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              type: object
              properties:
                _id:
                  type: integer
                name:
                  type: string
                description:
                  type: string
                type:
                  type: string
                unit:
                  type: string
                price:
                  type: integer
                __v:
                  type: integer
        400:
          description: User Error
        500:
          description: Server Error
  /product/{productID}:
    get:
      tags:
        - Products
      summary: Find product by ID
      description: Returns a product by the product ID
      parameters:
        - name: productID
          in: path
          description: ID of product to return
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              _id:
                type: integer
              name:
                type: string
              description:
                type: string
              type:
                type: string
              unit:
                type: string
              price:
                type: integer
              __v:
                type: integer
        400:
          description: User not found
        500:
          description: Server error
  /product/update_product:
    post:
      tags:
        - Products
      summary: Update product information
      description: API to update the basic information of a product
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: Product Id
          schema:
            type: object
            properties:
              _id:
                type: string
              name:
                type: string
              description:
                type: string
              price:
                type: integer
              unit:
                type: string
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              _id:
                type: string
              name:
                type: string
              description:
                type: string
              price:
                type: integer
              unit:
                type: string
        500:
          description: no product found with that ID
  /inventory/getallinventory:
    get:
      tags:
        - Inventory
      summary: Returns all the inventory items
      description: An API that returns all the inventory items in the database
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              type: object
              properties:
                _id:
                  type: string
                currentStock:
                  type: integer
                reorderStock:
                  type: integer
                supplier:
                  type: string
                product:
                  type: string
                __v:
                  type: integer
        500:
          description: Error
  /inventory/add_inventory:
    post:
      tags:
        - Inventory
      summary: Creates a new product and add it to the inventory
      description: Add a new product to the inventory
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: Inventory body
          schema:
            type: object
            properties:
              currentStock:
                type: integer
              reorderStock:
                type: integer
              supplier:
                type: object
                properties:
                  name:
                    type: string
                  email:
                    type: string
                  phoneNumber:
                    type: string
              product:
                type: object
                properties:
                  name:
                    type: string
                  description:
                    type: string
                  type:
                    type: string
                  unit:
                    type: string
                  price:
                    type: integer
      responses:
        200:
          description: Successful operation
          schema:
            type: object
            properties:
              currentStock:
                type: integer
              reorderStock:
                type: integer
              supplier:
                type: string
              product:
                type: string
              _id:
                type: string
              __v:
                type: integer
        405:
          description: Invalid input
        500:
          description: server error
  /inventory/delete_inventory:
    post:
      tags:
        - Inventory
      summary: Removes an inventory
      description: Removes an item form the inventory using the Product ID
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: Product ID
          schema:
            type: object
            properties:
              _id:
                type: string
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              acknowledged:
                type: boolean
              deletedCount:
                type: integer
        500:
          description: Action failure
  /supplier/{supplierID}:
    get:
      tags:
        - Supplier
      summary: Find supplier by ID
      description: Returns a supplier information by the supplier ID
      parameters:
        - name: supplierID
          in: path
          description: ID of supplier to return
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              _id:
                type: integer
              name:
                type: string
              email:
                type: string
              phoneNumber:
                type: string
              __v:
                type: integer
        400:
          description: Supplier not found
        500:
          description: Server error
  /supplier/getallsuppliers:
    get:
      tags:
        - Supplier
      summary: Returns all the suppliers in the database
      description: An API that returns all the information of suppliers in the database
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              type: object
              properties:
                _id:
                  type: string
                name:
                  type: string
                email:
                  type: string
                phoneNumber:
                  type: string
                __v:
                  type: integer
        500:
          description: Error
  /supplier/updatesupplier:
    post:
      tags:
        - Supplier
      summary: Update supplier information
      description: API to update the basic information of a supplier
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: supplier Info
          schema:
            type: object
            properties:
              _id:
                type: string
              name:
                type: string
              email:
                type: string
              phoneNumber:
                type: string
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              _id:
                type: string
              name:
                type: string
              email:
                type: string
              phoneNumber:
                type: integer
        500:
          description: Error
